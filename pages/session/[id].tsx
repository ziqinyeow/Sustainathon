import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { GetServerSideProps } from "next";
import { useEffect, useState } from "react";
import useAuth from "@/firebase/auth/hook/auth";
import { withProtected } from "@/firebase/auth/hook/route";
import { Student } from ".prisma/client";
import { prisma } from "@/lib/prisma";
import Layout from "@/layouts/Layout";
import CreateQuestionCard from "@/components/CreateQuestionCard";
import ChatCard from "@/components/ChatCard";

// @ts-ignore
export const getServerSideProps: GetServerSideProps = async ({ params }) => {
  const session: any = await prisma.session.findUnique({
    where: {
      // @ts-ignore
      id: params?.id,
    },
    include: {
      quiz: {
        include: {
          question: {
            include: {
              answer: true,
            },
          },
        },
      },
      chat: {
        include: {
          message: true,
        },
      },
      student: true,
    },
  });
  return {
    props: {
      session: JSON.parse(JSON.stringify(session)),
    },
  };
};

function SessionPage({ session }: any) {
  const { user }: any = useAuth();
  const router = useRouter();
  const [questionCard, setQuestionCard] = useState(0);
  const [chatCard, setChatCard] = useState(0);

  useEffect(() => {
    if (session?.email !== user.email) {
      router.push("/");
    }
  }, [router, session?.email, user.email]);

  return (
    <div>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className="flex items-center justify-between w-full mb-7">
          <h2>
            {session?.class_code}: {session?.name}
          </h2>
          <div className="space-x-3">
            <button
              onClick={() => {
                setChatCard(1);
              }}
              className="p-2 transition-all duration-200 bg-white rounded-lg hover:bg-gray-200"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                width="24"
                height="24"
              >
                <path fill="none" d="M0 0h24v24H0z" />
                <path d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455zm-.692-2H20V5H4v13.385L5.763 17zM11 10h2v2h-2v-2zm-4 0h2v2H7v-2zm8 0h2v2h-2v-2z" />
              </svg>
            </button>
            <ChatCard
              session_id={session?.id}
              chatCard={chatCard}
              setChatCard={setChatCard}
            />
          </div>
        </div>
        <div className="grid w-full gap-5 md:grid-cols-2 lg:grid-cols-4">
          <div className="w-full p-4 bg-white rounded-md">
            <div className="p-3 mb-3 rounded-md bg-gray-50 w-min">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                width="24"
                height="24"
              >
                <path fill="none" d="M0 0h24v24H0z" />
                <path d="M4 22a8 8 0 1 1 16 0h-2a6 6 0 1 0-12 0H4zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6 6 2.685 6 6-2.685 6-6 6zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4z" />
              </svg>
            </div>
            <h4 className="font-medium">Total Students</h4>
            <h5 className="text-sm text-gray-500">10 days ago</h5>
          </div>
          <div className="w-full p-4 bg-white rounded-md">
            <div className="p-3 mb-3 rounded-md bg-gray-50 w-min">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                width="24"
                height="24"
              >
                <path fill="none" d="M0 0h24v24H0z" />
                <path d="M14 14.252v2.09A6 6 0 0 0 6 22l-2-.001a8 8 0 0 1 10-7.748zM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6 6 2.685 6 6-2.685 6-6 6zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm5.793 8.914l3.535-3.535 1.415 1.414-4.95 4.95-3.536-3.536 1.415-1.414 2.12 2.121z" />
              </svg>
            </div>
            <h4 className="font-medium">Present</h4>
            <h5 className="text-sm text-gray-500">10 days ago</h5>
          </div>
          <div className="w-full p-4 bg-white rounded-md">
            <div className="p-3 mb-3 rounded-md bg-gray-50 w-min">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                width="24"
                height="24"
              >
                <path fill="none" d="M0 0h24v24H0z" />
                <path d="M14 14.252v2.09A6 6 0 0 0 6 22l-2-.001a8 8 0 0 1 10-7.748zM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6 6 2.685 6 6-2.685 6-6 6zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm7 6.586l2.121-2.122 1.415 1.415L20.414 19l2.122 2.121-1.415 1.415L19 20.414l-2.121 2.122-1.415-1.415L17.586 19l-2.122-2.121 1.415-1.415L19 17.586z" />
              </svg>
            </div>
            <h4 className="font-medium">Absent</h4>
            <h5 className="text-sm text-gray-500">10 days ago</h5>
          </div>
          <div className="w-full p-4 bg-white rounded-md">
            <div className="p-3 mb-3 rounded-md bg-gray-50 w-min">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                width="24"
                height="24"
              >
                <path fill="none" d="M0 0h24v24H0z" />
                <path d="M12 14v2a6 6 0 0 0-6 6H4a8 8 0 0 1 8-8zm0-1c-3.315 0-6-2.685-6-6s2.685-6 6-6 6 2.685 6 6-2.685 6-6 6zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm8.828 10.071L18 24l-2.828-2.929c-1.563-1.618-1.563-4.24 0-5.858a3.904 3.904 0 0 1 5.656 0c1.563 1.618 1.563 4.24 0 5.858zm-1.438-1.39c.813-.842.813-2.236 0-3.078a1.904 1.904 0 0 0-2.78 0c-.813.842-.813 2.236 0 3.079L18 21.12l1.39-1.44z" />
              </svg>
            </div>
            <h4 className="font-medium">Late Comer</h4>
            <h5 className="text-sm text-gray-500">10 days ago</h5>
          </div>
        </div>
        <div className="grid w-full gap-10 mt-10 md:grid-cols-3">
          <div className="md:col-span-2">
            <h3 className="mb-5 font-bold">Student List</h3>
            <div className="flex gap-5 mb-10">
              <input
                type="text"
                className="w-full px-4 py-2 transition-all duration-200 border rounded-lg hover:bg-gray-100 focus:bg-gray-100"
                placeholder="Search"
              />
              <button className="p-2 text-white transition-all duration-200 bg-black border-2 border-black rounded-lg hover:bg-white hover:text-black">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  width="24"
                  height="24"
                >
                  <path fill="none" d="M0 0h24v24H0z" />
                  <path
                    fill="currentColor"
                    d="M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z"
                  />
                </svg>
              </button>
            </div>
            <div className="space-y-4">
              {session?.student && session?.student?.length !== 0 ? (
                <div>
                  {session?.student?.map((s: Student) => (
                    <div key={s.id}>
                      <a
                        href={`https://mail.google.com/mail/?view=cm&fs=1&to=${s.email}`}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        <div className="grid grid-cols-3 gap-5 p-4 transition-all duration-150 bg-white rounded-md hover:bg-gray-100">
                          <div className="py-1 overflow-hidden whitespace-nowrap">
                            {s.name}
                          </div>
                          <div className="py-1 overflow-hidden">{s.email}</div>
                          <div className="flex justify-end">
                            <div className="px-3 py-1 overflow-hidden bg-green-200 rounded">
                              active
                            </div>
                          </div>
                        </div>
                      </a>
                    </div>
                  ))}
                </div>
              ) : (
                <div className="flex flex-col items-center justify-center w-full p-6 space-y-2 bg-white rounded-md min-h-[200px]">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    width="48"
                    height="48"
                    className="text-gray-300"
                  >
                    <path fill="none" d="M0 0h24v24H0z" />
                    <path
                      fill="currentColor"
                      d="M3.783 2.826L12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976zM5 4.604v9.185a4 4 0 0 0 1.781 3.328L12 20.597l5.219-3.48A4 4 0 0 0 19 13.79V4.604L12 3.05 5 4.604zM12 11a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5zm-4.473 5a4.5 4.5 0 0 1 8.946 0H7.527z"
                    />
                  </svg>
                  <h4 className="font-bold text-gray-600">No student yet</h4>
                </div>
              )}
            </div>
          </div>
          <div className="w-full md:col-span-1">
            <div className="flex items-center mb-5">
              <h3 className="w-full font-bold">Question</h3>
              <button
                onClick={() => setQuestionCard(1)}
                className="p-2 transition-all duration-200 bg-white rounded-lg hover:bg-gray-200 hover:text-black"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  width="24"
                  height="24"
                >
                  <path fill="none" d="M0 0h24v24H0z" />
                  <path
                    fill="currentColor"
                    d="M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z"
                  />
                </svg>
              </button>
              <CreateQuestionCard
                session_id={session?.id}
                questionCard={questionCard}
                setQuestionCard={setQuestionCard}
              />
            </div>
            <div className="">
              {session?.quiz?.question &&
              session?.quiz?.question?.length !== 0 ? (
                <div>
                  {session?.quiz?.question?.map((question: any) => (
                    <Link key={question.id} href={`/question/${question.id}`}>
                      <a>
                        <div className="p-4 mb-4 transition-all duration-200 bg-white rounded hover:bg-gray-100">
                          <h5 className="mb-3 font-medium whitespace-pre-wrap">
                            {question.question}
                          </h5>
                          {/* <h5 className="mb-3 font-medium text-gray-400">
                            {question.name}
                          </h5> */}
                          <div className="flex items-center mb-2 space-x-2">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              viewBox="0 0 24 24"
                              width="16"
                              height="16"
                            >
                              <path fill="none" d="M0 0h24v24H0z" />
                              <path d="M17 3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2v2h6V1h2v2zm-2 2H9v2H7V5H4v4h16V5h-3v2h-2V5zm5 6H4v8h16v-8z" />
                            </svg>
                            <h5 className="text-xs font-medium">
                              {new Date(
                                question.createdAt
                              ).toLocaleDateString()}
                            </h5>
                            <h5 className="text-xs font-medium">
                              {
                                new Date(question.createdAt)
                                  .toTimeString()
                                  .split(" ")[0]
                              }
                            </h5>
                          </div>
                          <div className="flex items-center space-x-2">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              viewBox="0 0 24 24"
                              width="16"
                              height="16"
                            >
                              <path fill="none" d="M0 0h24v24H0z" />
                              <path d="M14 14.252v2.09A6 6 0 0 0 6 22l-2-.001a8 8 0 0 1 10-7.748zM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6 6 2.685 6 6-2.685 6-6 6zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm6 6v-3.5l5 4.5-5 4.5V19h-3v-2h3z" />
                            </svg>
                            <h5 className="text-xs font-medium">
                              {question?.answer?.length}
                            </h5>
                          </div>
                        </div>
                      </a>
                    </Link>
                  ))}
                </div>
              ) : (
                <div className="flex flex-col items-center justify-center w-full p-6 space-y-2 text-gray-600 bg-white rounded-md min-h-28">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    width="48"
                    height="48"
                  >
                    <path fill="none" d="M0 0h24v24H0z" />
                    <path d="M15 5h2a2 2 0 0 1 2 2v8.17a3.001 3.001 0 1 1-2 0V7h-2v3l-4.5-4L15 2v3zM5 8.83a3.001 3.001 0 1 1 2 0v6.34a3.001 3.001 0 1 1-2 0V8.83zM6 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 12a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm12 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2z" />
                  </svg>
                  <h4 className="font-bold">No question yet</h4>
                </div>
              )}
            </div>
          </div>
        </div>
      </Layout>
    </div>
  );
}
export default withProtected(SessionPage);
