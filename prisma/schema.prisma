// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["dataProxy"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DB_URL")
}

model Teacher {
  id      String    @id @default(cuid())
  name    String?
  email   String    @unique
  session Session[]
}

model Student {
  id         String    @id @default(cuid())
  name       String?
  email      String    @unique
  password   String?
  answer     Answer[]
  session    Session[] @relation(fields: [session_id], references: [id])
  session_id String?
}

model Session {
  id          String    @id @default(cuid())
  name        String
  class_code  String
  description String?
  startedAt   DateTime  @default(now())
  createdAt   DateTime  @default(now())
  teacher     Teacher   @relation(fields: [email], references: [email])
  email       String
  student     Student[]
  quiz        Quiz?
  chat        Chatroom?
}

model Quiz {
  id         String     @id @default(cuid())
  name       String
  createdAt  DateTime   @default(now())
  question   Question[]
  session    Session    @relation(fields: [session_id], references: [id])
  session_id String     @unique
}

model Question {
  id           String    @id @default(cuid())
  question     String
  answerScheme String
  createdAt    DateTime  @default(now())
  realisedAt   DateTime?
  quiz         Quiz?     @relation(fields: [session_id], references: [session_id])
  session_id   String?
  answer       Answer[] // this is the answer given by student
}

model Answer {
  id          String    @id @default(cuid())
  answer      String
  submittedAt DateTime  @default(now())
  question    Question? @relation(fields: [question_id], references: [id])
  question_id String?
  student     Student?  @relation(fields: [student_id], references: [id])
  student_id  String?
}

model Chatroom {
  id         String    @id @default(cuid())
  name       String
  message    Message[]
  session    Session   @relation(fields: [session_id], references: [id])
  session_id String    @unique
}

model Message {
  id          String    @id @default(cuid())
  sender      String?
  text        String?
  chatroom    Chatroom? @relation(fields: [chatroom_id], references: [id])
  chatroom_id String?
}
